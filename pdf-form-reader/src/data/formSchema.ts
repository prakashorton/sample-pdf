import { FormSchema } from '../types/form';

// This simulates AI-extracted form data from the PDF
// In a real application, this would be generated by analyzing the PDF with AI
export const bankFormSchema: FormSchema = {
  title: "Bank Account Application Form",
  description: "Complete this form to open a new bank account",
  fields: [
    {
      id: "postOffice",
      name: "postOffice",
      label: "Post Office",
      type: "text",
      value: "",
      placeholder: "Enter Post office",
      required: true,
      boundingBox: { x: 127, y: 165, width: 190, height: 25, page: 1 },
      validation: {
        pattern: "^[A-Z0-9]+$",
        message: "Post office should only contain uppercase letters and numbers"
      }
    },
    {
      id: "cifId",
      name: "cifId",
      label: "CIF ID",
      type: "text",
      value: "CIF123456",
      placeholder: "Enter CIF ID",
      required: true,
      boundingBox: {
        x: 110,
        y: 190,
        width: 200,
        height: 25,
        page: 1
      },
      validation: {
        pattern: "^[A-Z0-9]+$",
        message: "CIF ID should only contain uppercase letters and numbers"
      }
    },
    {
      id: "fullName",
      name: "fullName",
      label: "Full Name",
      type: "text",
      value: "John Michael Doe",
      placeholder: "Enter your full name",
      required: true,
      boundingBox: {
        x: 171,
        y: 246,
        width: 200,
        height: 25,
        page: 1
      },
      validation: {
        pattern: "^[a-zA-Z\\s]+$",
        message: "Name should only contain letters and spaces"
      }
    },
    {
      id: "primaryAccountId",
      name: "primaryAccountId",
      label: "Primary Account ID",
      type: "text",
      value: "ACC123456789",
      placeholder: "Enter primary account ID",
      required: true,
      boundingBox: {
        x: 351,
        y: 187,
        width: 200,
        height: 25,
        page: 1
      },
      validation: {
        pattern: "^[A-Z0-9]+$",
        message: "Primary Account ID should only contain uppercase letters and numbers"
      }
    },
    {
      id: "email",
      name: "email",
      label: "Email ID",
      type: "email",
      value: "john.doe@example.com",
      placeholder: "Enter your email ID",
      required: true,
      boundingBox: {
        x: 221, y: 396,
        width: 180,
        height: 25,
        page: 1
      },
      validation: {
        pattern: "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
        message: "Please enter a valid email ID"
      }
    },
    {
      id: "dateOfBirth",
      name: "dateOfBirth",
      label: "Date of Birth",
      type: "date",
      value: "1990-05-15",
      required: true,
      boundingBox: {
        x: 220,
        y: 412,
        width: 100,
        height: 25,
        page: 1
      }
    },
    {
      id: "panNumber",
      name: "panNumber",
      label: "PAN Number",
      type: "text",
      value: "ABCDE1234F",
      placeholder: "Enter PAN number",
      required: true,
      boundingBox: { x: 433, y: 378, width: 150, height: 25, page: 1 },
      validation: {
        pattern: "^[A-Z]{5}[0-9]{4}[A-Z]{1}$",
        message: "Please enter a valid PAN number (e.g., ABCDE1234F)"
      }
    },
    {
      id: "mobileNumber",
      name: "mobileNumber",
      label: "Mobile Number",
      type: "text",
      value: "+1-555-123-4567",
      placeholder: "Enter mobile number",
      required: true,
      boundingBox: {
        x: 216,
        y: 376,
        width: 100,
        height: 25,
        page: 1
      },
      validation: {
        pattern: "^[+]?[0-9\\s-]+$",
        message: "Please enter a valid mobile number"
      }
    },
    {
      id: "internetBankingRequired",
      name: "internetBankingRequired",
      label: "Internet Banking is Required",
      type: "checkbox",
      value: true,
      required: true,
      boundingBox: {
        x: 450,
        y: 672,
        width: 200,
        height: 25,
        page: 1
      }
    }
  ]
};

